language: rust

sudo: required
dist: trusty

before_install:
  - curl https://sh.rustup.rs -sSf > rustup.sh
  - chmod +x rustup.sh
  - ./rustup.sh -y
  - cargo install clippy
  - export PATH=$HOME/.cargo/bin:$PATH
  #- cargo install cargo-travis && export PATH=$HOME/.cargo/bin:$PATH

addons:
  apt:
    sources:
      - sourceline: 'ppa:wpilib/toolchain'
      - kalakris-cmake
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - binutils-dev
      - cmake
      - frc-toolchain
      - qemu

install:
  - source ~/.cargo/env
  - rustup target add arm-unknown-linux-gnueabi
  #- echo "[target.arm-unknown-linux-gnueabi]" >> ~/.cargo/config
  #- echo 'linker = "arm-frc-linux-gnueabi-gcc"' >> ~/.cargo/config

rust:
  - stable
  - beta
  - nightly
matrix:
  allow_failures:
    - rust: nightly

#before_script:
#  - cargo install cargo-travis && export PATH=$HOME/.cargo/bin:$PATH

script:
  - cd frcredox_hal; cargo build --verbose; cd ../frcredox; cargo build --verbose
  - env CC="arm-frc-linux-gnueabi-gcc" cd frxredox_hal; cargo rustc --verbose --target=arm-unknown-linux-gnueabi -- -D warnings;
  - env CC="arm-frc-linux-gnueabi-gcc" cd frcredox; cargo rustc --verbose --target=arm-unknown-linux-gnueabi --features clippy -- -D warnings
  - cd frcredox_hal; cargo clippy; cd ../frcredox; cargo clippy
  - env CC="arm-frc-linux-gnueabi-gcc" cd frcredox_hal; cargo clippy --target=arm-unknown-linux-gnueabi
  - env CC="arm-frc-linux-gnueabi-gcc" cd frcredox; cargo clippy --target=arm-unknown-linux-gnueabi
